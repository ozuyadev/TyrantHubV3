if not LPH_OBFUSCATED then
    getfenv().LPH_NO_VIRTUALIZE = function(f) return f end
    getfenv().LPH_JIT_MAX = function(f) return f end
end

if game.PlaceId == 8204899140 then
    LPH_JIT_MAX(function()
        local Hooks = {}
        local Targets = {}
        local Whitelisted = {
            {655, 775, 724, 633, 891},
            {760, 760, 771, 665, 898},
            {660, 759, 751, 863, 771},
        }

        local function TableEquality(x, y)
            if (#x ~= #y) then
                return false
            end
            for i, v in next, x do
                if (y[i] ~= v) then
                    return false
                end
            end
            return true
        end

        LPH_NO_VIRTUALIZE(function()
            for i, v in next, getgc(true) do
                if (type(v) == "function") then
                    local ScriptTrace, Line = debug.info(v, "sl")
                    if string.find(ScriptTrace, "PlayerModule.LocalScript") and table.find({42, 51, 61}, Line) then
                        table.insert(Targets, v)
                    end
                end
                if (type(v) == "table") and (rawlen(v) == 19) and getrawmetatable(v) then
                    Targets.call = rawget(getrawmetatable(v), "call")
                end
            end
        end)()

        if not (Targets[1] and Targets[2] and Targets[3] and Targets.call) then
            warn("Bypass failed to load properly")
            return
        end

        local ScriptPath = debug.info(Targets[1], "s")

        Hooks.debug_info = hookfunction(debug.info, LPH_NO_VIRTUALIZE(function(...)
            if not checkcaller() and TableEquality({...}, {2, "s"}) then
                return ScriptPath
            end
            return Hooks.debug_info(...)
        end))

        hookfunction(Targets[1], LPH_NO_VIRTUALIZE(function() end))
        hookfunction(Targets[2], LPH_NO_VIRTUALIZE(function() end))
        hookfunction(Targets[3], LPH_NO_VIRTUALIZE(function() end))

        Hooks.call = hookfunction(Targets.call, LPH_NO_VIRTUALIZE(function(self, ...)
            if
                TableEquality(Whitelisted[1], {...}) or
                TableEquality(Whitelisted[2], {...}) or
                TableEquality(Whitelisted[3], {...})
            then
                return Hooks.call(self, ...)
            end
        end))

        task.wait(3)
    end)
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/teppyboy/RbxScripts/master/Misc/UI_Libraries/Zypher/Library.lua"))()

local main = library:CreateMain({
    projName = "Tyrant Hub",
    Resizable = true,
    MinSize = UDim2.new(0, 400, 0, 400),
    MaxSize = UDim2.new(0, 750, 0, 500),
})

local catchingCategory = main:CreateCategory("Catching")
local playerCategory = main:CreateCategory("Player")
local miscCategory = main:CreateCategory("Misc")

local catchingSection = catchingCategory:CreateSection("Catching Features")

local magnetEnabled = false
local magnetActivated = false
local autoCatchEnabled = false
local magnetSize = 10
local autoCatchRadius = 10
local showHitboxEnabled = false
local hitbox

catchingSection:Create("Toggle", "Magnets", function(state)
    magnetEnabled = state
end, { default = false })

catchingSection:Create("Slider", "Magnet Size", function(value)
    magnetSize = value
end, { min = 1, max = 35, default = 10 })

catchingSection:Create("Toggle", "Auto-Catch", function(state)
    autoCatchEnabled = state
    if autoCatchEnabled then
        autoCatch()
    end
end, { default = false })

catchingSection:Create("Slider", "Auto-Catch Radius", function(value)
    autoCatchRadius = value
end, { min = 1, max = 15, default = 10 })

catchingSection:Create("Toggle", "Show Hitbox", function(state)
    showHitboxEnabled = state
    if hitbox then
        hitbox:Destroy()
        hitbox = nil
    end

    if showHitboxEnabled then
        local function updateHitbox()
            local ball = workspace:FindFirstChild("Football")
            if ball then
                if not hitbox then
                    hitbox = Instance.new("Part")
                    hitbox.Size = Vector3.new(magnetSize * 1.5, magnetSize * 1.5, magnetSize * 1.5)
                    hitbox.Transparency = 0.5
                    hitbox.Anchored = true
                    hitbox.CanCollide = false
                    hitbox.Parent = workspace
                end
                hitbox.CFrame = ball.CFrame
            end
        end

        game:GetService("RunService").Stepped:Connect(function()
            if showHitboxEnabled then
                updateHitbox()
            end
        end)
    end
end, { default = false })

local playerSection = playerCategory:CreateSection("Player Features")

local walkspeedEnabled = false
local jumpPowerEnabled = false
local walkspeedValue = 20
local jumpPowerValue = 50

playerSection:Create("Toggle", "Walkspeed", function(state)
    walkspeedEnabled = state
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if state then
            humanoid.WalkSpeed = walkspeedValue
        else
            humanoid.WalkSpeed = 16
        end
    end
end, { default = false })

playerSection:Create("Slider", "Walkspeed Value", function(value)
    walkspeedValue = value
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if walkspeedEnabled and humanoid then
        humanoid.WalkSpeed = walkspeedValue
    end
end, { min = 20, max = 23, default = 20 })

playerSection:Create("Toggle", "JumpPower", function(state)
    jumpPowerEnabled = state
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if state then
            humanoid.JumpPower = jumpPowerValue
        else
            humanoid.JumpPower = 50
        end
    end
end, { default = false })

playerSection:Create("Slider", "JumpPower Value", function(value)
    jumpPowerValue = value
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if jumpPowerEnabled and humanoid then
        humanoid.JumpPower = jumpPowerValue
    end
end, { min = 50, max = 60, default = 50 })

local miscSection = miscCategory:CreateSection("Misc Features")

local ballLandingPredictionEnabled = false
local predictionColor = Color3.fromRGB(255, 255, 255)

local function beamProjectile(g, v0, x0, t1)
    local c = 0.5 * 0.5 * 0.5
    local p3 = 0.5 * g * t1 * t1 + v0 * t1 + x0
    local p2 = p3 - (g * t1 * t1 + v0 * t1) / 3
    local p1 = (c * g * t1 * t1 + 0.5 * v0 * t1 + x0 - c * (x0 + p3)) / (3 * c) - p2

    local curve0 = (p1 - x0).magnitude
    local curve1 = (p2 - p3).magnitude

    local b = (x0 - p3).unit
    local r1 = (p1 - x0).unit
    local u1 = r1:Cross(b).unit
    local r2 = (p2 - p3).unit
    local u2 = r2:Cross(b).unit
    b = u1:Cross(r1).unit

    local cf1 = CFrame.new(
        x0.x, x0.y, x0.z,
        r1.x, u1.x, b.x,
        r1.y, u1.y, b.y,
        r1.z, u1.z, b.z
    )

    local cf2 = CFrame.new(
        p3.x, p3.y, p3.z,
        r2.x, u2.x, b.x,
        r2.y, u2.y, b.y,
        r2.z, u2.z, b.z
    )

    return curve0, -curve1, cf1, cf2
end

LPH_JIT_MAX(function()
    LPH_NO_VIRTUALIZE(function()
        local function startPrediction()
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local RunService = game:GetService("RunService")

            local function onBallAdded(b)
                if b.Name == "Football" and b:IsA("BasePart") then
                    task.wait()
                    local vel = b.Velocity
                    local pos = b.Position
                    local c0, c1, cf1, cf2 = beamProjectile(Vector3.new(0, -28, 0), vel, pos, 10)
                    local beam = Instance.new("Beam")
                    local a0 = Instance.new("Attachment")
                    local a1 = Instance.new("Attachment")
                    beam.Color = ColorSequence.new(predictionColor)
                    beam.Transparency = NumberSequence.new(0, 0)
                    beam.CurveSize0 = c0
                    beam.CurveSize1 = c1
                    beam.Name = "Hitbox"
                    beam.Parent = workspace.Terrain
                    beam.Transparency = NumberSequence.new({
                        NumberSequenceKeypoint.new(0, 1),
                        NumberSequenceKeypoint.new(0.01, 0),
                        NumberSequenceKeypoint.new(1, 0),
                        NumberSequenceKeypoint.new(1, 0.01),
                    })
                    beam.Segments = 1750
                    a0.Parent = workspace.Terrain
                    a1.Parent = workspace.Terrain
                    a0.CFrame = a0.Parent.CFrame:Inverse() * cf1
                    a1.CFrame = a1.Parent.CFrame:Inverse() * cf2
                    beam.Attachment0 = a0
                    beam.Attachment1 = a1
                    beam.Width0 = 1
                    beam.Width1 = 1

                    task.wait(7)
                    beam:Destroy()
                    a0:Destroy()
                    a1:Destroy()
                end
            end

            workspace.ChildAdded:Connect(onBallAdded)
        end

        if ballLandingPredictionEnabled then
            startPrediction()
        end
    end)
end)

local function autoCatch()
    local function onHeartbeat()
        local ball = workspace:FindFirstChild("Football")
        if ball and autoCatchEnabled then
            local player = game.Players.LocalPlayer
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local hrp = char.HumanoidRootPart
                local distance = (hrp.Position - ball.Position).magnitude
                if distance <= autoCatchRadius then
                    game:GetService("UserInputService"):InputBegan(Enum.KeyCode.MouseButton1, false)
                end
            end
        end
    end

    game:GetService("RunService").Heartbeat:Connect(onHeartbeat)
end

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if magnetEnabled then
            magnetActivated = true
        end
    end
end

game:GetService("UserInputService").InputBegan:Connect(onInputBegan)

local function manageMagnets()
    local Workspace = game:GetService("Workspace")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer or Players.PlayerAdded:Wait()
    local character = player.Character or player.CharacterAdded:Wait()
    local HumanoidRootPart = character:FindFirstChild("HumanoidRootPart")

    local range = magnetSize
    Workspace.ChildAdded:Connect(function(child)
        if child.Name == "Football" and child:IsA("BasePart") then
            child.Size = Vector3.new(range, range, range)
            child.CanCollide = false
            if magnetActivated then
                -- Implement magnet functionality here
            end
        end
    end)
end

manageMagnets()

print("Tyrant Hub loaded successfully!")
