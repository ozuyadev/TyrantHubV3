-- Load Zypher UI Library
local success, library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostDuckyy/UI-Libraries/main/Zypher/source.lua"))()
end)

if not success or not library then
    error("Failed to load Zypher UI Library. Please check the URL or the library availability.")
end

print("Zypher UI Library loaded successfully")

-- Create Main UI Window
local success, main = pcall(function()
    return library:CreateMain({
        projName = "Tyrant Hub",
        Resizable = true,
        MinSize = UDim2.new(0, 400, 0, 400),
        MaxSize = UDim2.new(0, 750, 0, 500),
    })
end)

if not success or not main then
    error("Failed to create main UI window: " .. (main or "Unknown error"))
end

print("Main UI window created successfully")

-- Create Tabs and Sections
local catchingCategory = pcall(function() return main:CreateCategory("Catching") end)
local catchingSection = pcall(function() return catchingCategory:CreateSection("Magnets") end)

if not catchingCategory or not catchingSection then
    error("Failed to create UI categories or sections: " .. (catchingSection or "Unknown error"))
end

print("UI categories and sections created successfully")

-- Initialize Variables
local Workspace = game:GetService("Workspace")
local magson = false
local range = 10
local delayon = false
local delay = 0.1

-- Function to Handle Magnets
local function handleMagnets()
    Workspace.ChildAdded:Connect(function(child)
        if child.Name == "Football" and child:IsA("BasePart") then
            if magson then
                if delayon then
                    wait(delay)
                end
                child.Size = Vector3.new(range, range, range)
                child.CanCollide = false  -- Set hitbox to no collision
            else
                child.Size = Vector3.new(0.85, 1.2, 0.85)
                child.CanCollide = false  -- Ensure no collision when magnets are off
            end
        end
    end)
end

-- Add UI Elements for Magnets
local successToggle = pcall(function()
    catchingSection:Create("Toggle", "Magnets", function(state)
        magson = state
        handleMagnets()
    end, { default = false })
end)

if not successToggle then
    error("Failed to create Magnets toggle.")
end

local successSliderRange = pcall(function()
    catchingSection:Create("Slider", "Range", function(value)
        range = value
    end, { min = 1, max = 25, default = 10, increment = 1, valueName = "Range" })
end)

if not successSliderRange then
    error("Failed to create Range slider.")
end

local successToggleDelay = pcall(function()
    catchingSection:Create("Toggle", "Magnets Delay", function(state)
        delayon = state
    end, { default = false })
end)

if not successToggleDelay then
    error("Failed to create Magnets Delay toggle.")
end

local successSliderDelay = pcall(function()
    catchingSection:Create("Slider", "Delay", function(value)
        delay = value
    end, { min = 0, max = 1, default = 0.1, increment = 0.1, valueName = "Delay" })
end)

if not successSliderDelay then
    error("Failed to create Delay slider.")
end

print("UI elements added successfully")
